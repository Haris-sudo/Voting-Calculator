<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="votingResultImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>